var search_data = {"index":{"searchIndex":["admincontroller","applicationcontroller","applicationhelper","checkin","checkinscontroller","connectionqueue","dashboardcontroller","dashboardhelper","encryptedlist","friendship","friendshiphelper","matchmaker","sessionscontroller","teaser","teasercontroller","user","whitelist","add_new_request()","add_request()","all_friends_checkins()","create()","create()","create()","create_encrypted_list()","decrypt()","decrypt_list()","dumb()","encrypt()","encrypt_list()","force_create_encrypted_list()","friends_of()","gender_for()","generate_keys()","get_cipher()","get_connections()","get_pending()","get_requests()","include?()","index()","index()","index()","index()","last_checkin()","make_match()","make_request()","method_missing()","name_for()","people_search()","remove()","remove_person()","request()","resolve_queued_connections()","send_connection_message()","whitelisted()","readme_for_app"],"longSearchIndex":["admincontroller","applicationcontroller","applicationhelper","checkin","checkinscontroller","connectionqueue","dashboardcontroller","dashboardhelper","encryptedlist","friendship","friendshiphelper","matchmaker","sessionscontroller","teaser","teasercontroller","user","whitelist","encryptedlist#add_new_request()","user#add_request()","user#all_friends_checkins()","checkinscontroller#create()","sessionscontroller#create()","teasercontroller#create()","user#create_encrypted_list()","connectionqueue#decrypt()","encryptedlist::decrypt_list()","encryptedlist#dumb()","connectionqueue#encrypt()","encryptedlist::encrypt_list()","user#force_create_encrypted_list()","checkin#friends_of()","whitelist::gender_for()","user#generate_keys()","encryptedlist::get_cipher()","user#get_connections()","user#get_pending()","user#get_requests()","whitelist::include?()","admincontroller#index()","applicationcontroller#index()","checkinscontroller#index()","dashboardcontroller#index()","user#last_checkin()","matchmaker#make_match()","dashboardcontroller#make_request()","encryptedlist#method_missing()","whitelist::name_for()","dashboardcontroller#people_search()","encryptedlist#remove()","user#remove_person()","friendship::request()","user#resolve_queued_connections()","user#send_connection_message()","user#whitelisted()",""],"info":[["AdminController","","AdminController.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Checkin","","Checkin.html","",""],["CheckinsController","","CheckinsController.html","",""],["ConnectionQueue","","ConnectionQueue.html","",""],["DashboardController","","DashboardController.html","",""],["DashboardHelper","","DashboardHelper.html","",""],["EncryptedList","","EncryptedList.html","",""],["Friendship","","Friendship.html","",""],["FriendshipHelper","","FriendshipHelper.html","",""],["MatchMaker","","MatchMaker.html","",""],["SessionsController","","SessionsController.html","",""],["Teaser","","Teaser.html","",""],["TeaserController","","TeaserController.html","",""],["User","","User.html","",""],["Whitelist","","Whitelist.html","",""],["add_new_request","EncryptedList","EncryptedList.html#method-i-add_new_request","(new_request, type, key)","<p>Public: Add a new connection request to the encrypted list.\n<p>new_request - The user id of the request. …\n"],["add_request","User","User.html#method-i-add_request","(their_id, secret)",""],["all_friends_checkins","User","User.html#method-i-all_friends_checkins","()",""],["create","CheckinsController","CheckinsController.html#method-i-create","()",""],["create","SessionsController","SessionsController.html#method-i-create","()",""],["create","TeaserController","TeaserController.html#method-i-create","()",""],["create_encrypted_list","User","User.html#method-i-create_encrypted_list","()",""],["decrypt","ConnectionQueue","ConnectionQueue.html#method-i-decrypt","(key, secret)",""],["decrypt_list","EncryptedList","EncryptedList.html#method-c-decrypt_list","(list, key)","<p>Private: Decrypt a list.\n<p>list - A string representing an encrypted list. key  - Private key/password\nused …\n"],["dumb","EncryptedList","EncryptedList.html#method-i-dumb","(key)",""],["encrypt","ConnectionQueue","ConnectionQueue.html#method-i-encrypt","(key)",""],["encrypt_list","EncryptedList","EncryptedList.html#method-c-encrypt_list","(list, key)","<p>Private: Encrypt a list.\n<p>list - A Ruby Array. key  - Private key/password to encrypt with.\n<p>Returns a string …\n"],["force_create_encrypted_list","User","User.html#method-i-force_create_encrypted_list","(pword)",""],["friends_of","Checkin","Checkin.html#method-i-friends_of","(user)",""],["gender_for","Whitelist","Whitelist.html#method-c-gender_for","(email)",""],["generate_keys","User","User.html#method-i-generate_keys","()",""],["get_cipher","EncryptedList","EncryptedList.html#method-c-get_cipher","(type, key)","<p>Private: Get a cipher object for encryption/decryption.\n<p>type - A string either ‘encryption’ or ‘decryption’. …\n"],["get_connections","User","User.html#method-i-get_connections","(secret)",""],["get_pending","User","User.html#method-i-get_pending","(secret)",""],["get_requests","User","User.html#method-i-get_requests","(secret)",""],["include?","Whitelist","Whitelist.html#method-c-include-3F","(email)",""],["index","AdminController","AdminController.html#method-i-index","()",""],["index","ApplicationController","ApplicationController.html#method-i-index","()",""],["index","CheckinsController","CheckinsController.html#method-i-index","()",""],["index","DashboardController","DashboardController.html#method-i-index","()",""],["last_checkin","User","User.html#method-i-last_checkin","()",""],["make_match","MatchMaker","MatchMaker.html#method-i-make_match","(user)",""],["make_request","DashboardController","DashboardController.html#method-i-make_request","()",""],["method_missing","EncryptedList","EncryptedList.html#method-i-method_missing","(*args)","<p>Public: Adds list reading functionality. Should keep other method_missing\nthings in working. This is …\n"],["name_for","Whitelist","Whitelist.html#method-c-name_for","(email)",""],["people_search","DashboardController","DashboardController.html#method-i-people_search","()",""],["remove","EncryptedList","EncryptedList.html#method-i-remove","(their_id, key)","<p>Public: Remove a previously made request.\n<p>their_id - The user id of the person who was requested who now …\n"],["remove_person","User","User.html#method-i-remove_person","(their_id, secret)",""],["request","Friendship","Friendship.html#method-c-request","(requesting_user, requested_user)",""],["resolve_queued_connections","User","User.html#method-i-resolve_queued_connections","(secret)",""],["send_connection_message","User","User.html#method-i-send_connection_message","(their_id, type)",""],["whitelisted","User","User.html#method-i-whitelisted","()",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}